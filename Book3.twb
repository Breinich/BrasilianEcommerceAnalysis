<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.DatagraphCoreV1.true...DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <_.fcp.DatagraphNodeSingleValueFieldV1.true...DatagraphNodeSingleValueFieldV1 />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <Heatmap />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Payment type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Credit card&quot;'>
        <calculation class='tableau' formula='&quot;Credit card&quot;' />
        <members>
          <member value='&quot;Credit card&quot;' />
          <member value='&quot;Boleto&quot;' />
          <member value='&quot;Voucher&quot;' />
          <member value='&quot;Debit card&quot;' />
        </members>
      </column>
      <column caption='Date Slider' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2017-06-12#'>
        <calculation class='tableau' formula='#2017-06-12#' />
        <range granularity='1' max='#2018-09-03#' min='#2016-09-05#' period-type-v2='week' />
      </column>
      <column caption='Zoom days' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='30.'>
        <calculation class='tableau' formula='30.' />
        <range max='100.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='map' inline='true' name='federated.1ulfch20cbm12k107t0oj1as8vaz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='map' name='textscan.0c5sziv0awyqjq1g2spnn1crci2k'>
            <connection class='textscan' directory='C:/GitHub/BrasilianEcommerceAnalysis' filename='map.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0c5sziv0awyqjq1g2spnn1crci2k' name='map.csv' table='[map#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='hu_HU'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='order_id' ordinal='1' />
            <column datatype='real' name='price' ordinal='2' />
            <column datatype='integer' name='customer_zip_code_prefix' ordinal='3' />
            <column datatype='string' name='customer_city' ordinal='4' />
            <column datatype='string' name='customer_state' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0c5sziv0awyqjq1g2spnn1crci2k' name='map.csv' table='[map#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='hu_HU'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='order_id' ordinal='1' />
              <column datatype='real' name='price' ordinal='2' />
              <column datatype='integer' name='customer_zip_code_prefix' ordinal='3' />
              <column datatype='string' name='customer_city' ordinal='4' />
              <column datatype='string' name='customer_state' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0c5sziv0awyqjq1g2spnn1crci2k' name='time.csv' table='[time#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='hu_HU'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='order_id' ordinal='1' />
              <column datatype='real' name='price' ordinal='2' />
              <column datatype='date' name='order_purchase_timestamp' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1 (time.csv)]' value='[time.csv].[F1]' />
          <map key='[F1]' value='[map.csv].[F1]' />
          <map key='[customer_city]' value='[map.csv].[customer_city]' />
          <map key='[customer_state]' value='[map.csv].[customer_state]' />
          <map key='[customer_zip_code_prefix]' value='[map.csv].[customer_zip_code_prefix]' />
          <map key='[order_id (time.csv)]' value='[time.csv].[order_id]' />
          <map key='[order_id]' value='[map.csv].[order_id]' />
          <map key='[order_purchase_timestamp]' value='[time.csv].[order_purchase_timestamp]' />
          <map key='[price (time.csv)]' value='[time.csv].[price]' />
          <map key='[price]' value='[map.csv].[price]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;hu&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Ft&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;hu_HU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;hu&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Ft&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;hu_HU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_EC7E01766FFF490EA093211B37E1480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_EC7E01766FFF490EA093211B37E1480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_EC7E01766FFF490EA093211B37E1480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_zip_code_prefix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_zip_code_prefix]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>customer_zip_code_prefix</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_EC7E01766FFF490EA093211B37E1480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_city]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>customer_city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_EC7E01766FFF490EA093211B37E1480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_state]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>customer_state</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_EC7E01766FFF490EA093211B37E1480B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (time.csv)]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_56D9772E22BB46E2A9FBB22E8D357CC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id (time.csv)]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_56D9772E22BB46E2A9FBB22E8D357CC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price (time.csv)]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_56D9772E22BB46E2A9FBB22E8D357CC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_purchase_timestamp</remote-name>
            <remote-type>133</remote-type>
            <local-name>[order_purchase_timestamp]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>order_purchase_timestamp</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_56D9772E22BB46E2A9FBB22E8D357CC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Capped Cities' datatype='string' name='[Calculation_181832881792286720]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='UPPER(LEFT([customer_city], 1)) + LOWER(MID([customer_city], 2, LEN([customer_city])))' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='map.csv' datatype='table' name='[__tableau_internal_object_id__].[map.csv_EC7E01766FFF490EA093211B37E1480B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time.csv' datatype='table' name='[__tableau_internal_object_id__].[time.csv_56D9772E22BB46E2A9FBB22E8D357CC7]' role='measure' type='quantitative' />
      <column datatype='string' name='[customer_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[customer_zip_code_prefix]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='map.csv' id='map.csv_EC7E01766FFF490EA093211B37E1480B'>
            <properties context=''>
              <relation connection='textscan.0c5sziv0awyqjq1g2spnn1crci2k' name='map.csv' table='[map#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='hu_HU'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='order_id' ordinal='1' />
                  <column datatype='real' name='price' ordinal='2' />
                  <column datatype='integer' name='customer_zip_code_prefix' ordinal='3' />
                  <column datatype='string' name='customer_city' ordinal='4' />
                  <column datatype='string' name='customer_state' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='time.csv' id='time.csv_56D9772E22BB46E2A9FBB22E8D357CC7'>
            <properties context=''>
              <relation connection='textscan.0c5sziv0awyqjq1g2spnn1crci2k' name='time.csv' table='[time#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='hu_HU'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='order_id' ordinal='1' />
                  <column datatype='real' name='price' ordinal='2' />
                  <column datatype='date' name='order_purchase_timestamp' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (time.csv)]' />
            </expression>
            <first-end-point object-id='map.csv_EC7E01766FFF490EA093211B37E1480B' />
            <second-end-point object-id='time.csv_56D9772E22BB46E2A9FBB22E8D357CC7' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='time' inline='true' name='federated.0ver1fj0cainh617wdr7h0vos4l1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time' name='textscan.0j6gm541pebtx5182abqw0w3iyz8'>
            <connection class='textscan' directory='C:/GitHub/BrasilianEcommerceAnalysis' filename='time.csv' password='' server='' />
          </named-connection>
          <named-connection caption='payment' name='textscan.06iamnd0uksqv71bxcj5w0y9kusp'>
            <connection class='textscan' directory='C:/GitHub/BrasilianEcommerceAnalysis' filename='payment.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06iamnd0uksqv71bxcj5w0y9kusp' name='map.csv' table='[map#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='hu_HU'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='order_id' ordinal='1' />
            <column datatype='real' name='price' ordinal='2' />
            <column datatype='integer' name='customer_zip_code_prefix' ordinal='3' />
            <column datatype='string' name='customer_city' ordinal='4' />
            <column datatype='string' name='customer_state' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0j6gm541pebtx5182abqw0w3iyz8' name='time.csv' table='[time#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='order_id' ordinal='1' />
              <column datatype='real' name='price' ordinal='2' />
              <column datatype='date' name='order_purchase_timestamp' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.06iamnd0uksqv71bxcj5w0y9kusp' name='map.csv' table='[map#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='hu_HU'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='order_id' ordinal='1' />
              <column datatype='real' name='price' ordinal='2' />
              <column datatype='integer' name='customer_zip_code_prefix' ordinal='3' />
              <column datatype='string' name='customer_city' ordinal='4' />
              <column datatype='string' name='customer_state' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.06iamnd0uksqv71bxcj5w0y9kusp' name='payment.csv' table='[payment#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='order_id' ordinal='1' />
              <column datatype='real' name='price' ordinal='2' />
              <column datatype='string' name='payment_type' ordinal='3' />
              <column datatype='integer' name='customer_zip_code_prefix' ordinal='4' />
              <column datatype='string' name='customer_city' ordinal='5' />
              <column datatype='string' name='customer_state' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1 (map.csv)]' value='[map.csv].[F1]' />
          <map key='[F1 (payment.csv)]' value='[payment.csv].[F1]' />
          <map key='[F1]' value='[time.csv].[F1]' />
          <map key='[customer_city (map.csv)]' value='[map.csv].[customer_city]' />
          <map key='[customer_city]' value='[payment.csv].[customer_city]' />
          <map key='[customer_state (map.csv)]' value='[map.csv].[customer_state]' />
          <map key='[customer_state]' value='[payment.csv].[customer_state]' />
          <map key='[customer_zip_code_prefix (map.csv)]' value='[map.csv].[customer_zip_code_prefix]' />
          <map key='[customer_zip_code_prefix]' value='[payment.csv].[customer_zip_code_prefix]' />
          <map key='[order_id (map.csv)]' value='[map.csv].[order_id]' />
          <map key='[order_id (payment.csv)]' value='[payment.csv].[order_id]' />
          <map key='[order_id]' value='[time.csv].[order_id]' />
          <map key='[order_purchase_timestamp]' value='[time.csv].[order_purchase_timestamp]' />
          <map key='[payment_type]' value='[payment.csv].[payment_type]' />
          <map key='[price (map.csv)]' value='[map.csv].[price]' />
          <map key='[price (payment.csv)]' value='[payment.csv].[price]' />
          <map key='[price]' value='[time.csv].[price]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;hu&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Ft&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;hu_HU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_purchase_timestamp</remote-name>
            <remote-type>133</remote-type>
            <local-name>[order_purchase_timestamp]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>order_purchase_timestamp</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (map.csv)]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_2562F30EDE5240B592193B5F8AEF5F0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id (map.csv)]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_2562F30EDE5240B592193B5F8AEF5F0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price (map.csv)]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_2562F30EDE5240B592193B5F8AEF5F0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_zip_code_prefix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_zip_code_prefix (map.csv)]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>customer_zip_code_prefix</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_2562F30EDE5240B592193B5F8AEF5F0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_city (map.csv)]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>customer_city</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_2562F30EDE5240B592193B5F8AEF5F0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_state (map.csv)]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>customer_state</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_2562F30EDE5240B592193B5F8AEF5F0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (payment.csv)]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AA8A215466647F4A6D9D95654720BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[order_id (payment.csv)]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AA8A215466647F4A6D9D95654720BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price (payment.csv)]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AA8A215466647F4A6D9D95654720BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payment_type]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>payment_type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AA8A215466647F4A6D9D95654720BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_zip_code_prefix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_zip_code_prefix]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>customer_zip_code_prefix</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AA8A215466647F4A6D9D95654720BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_city]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>customer_city</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AA8A215466647F4A6D9D95654720BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_state]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>customer_state</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AA8A215466647F4A6D9D95654720BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Daily Sales' datatype='real' name='[Calculation_1085649031499436033]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [order_purchase_timestamp]: SUM([price])}' />
      </column>
      <column caption='Zoom Date' datatype='date' name='[Calculation_1085649031513300997]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED : MAX(IIF([Order Purchase Timestamp Set], [order_purchase_timestamp], NULL))}' />
      </column>
      <column caption='Zoom Date Include' datatype='string' name='[Calculation_1085649031513481222]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ABS(DATEDIFF(&apos;day&apos;, [order_purchase_timestamp], [Calculation_1085649031513300997]))&lt;=[Parameters].[Parameter 3] THEN&#13;&#10;    &quot;Include&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Exclude&quot;&#13;&#10;END' />
      </column>
      <column caption='Sum of Credit Card' datatype='integer' name='[Calculation_1102819004949397506]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [payment_type] = &quot;credit_card&quot; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Sum of Boleto' datatype='integer' name='[Calculation_1102819004950769667]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [payment_type] = &quot;boleto&quot; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Sum of Voucher' datatype='integer' name='[Calculation_1102819004950913028]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [payment_type] = &quot;voucher&quot; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Sum of Debit card' datatype='integer' name='[Calculation_1102819004951126021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [payment_type] = &quot;debit_card&quot; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Sort by payment type' datatype='integer' name='[Calculation_1102819004951261190]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Credit card&quot; THEN [Calculation_1102819004949397506]&#13;&#10;WHEN &quot;Boleto&quot; THEN [Calculation_1102819004950769667]&#13;&#10;WHEN &quot;Voucher&quot; THEN [Calculation_1102819004950913028]&#13;&#10;WHEN &quot;Debit card&quot; THEN [Calculation_1102819004951126021]&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='map.csv' datatype='table' name='[__tableau_internal_object_id__].[map.csv_2562F30EDE5240B592193B5F8AEF5F0F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='payment.csv' datatype='table' name='[__tableau_internal_object_id__].[payment.csv_8AA8A215466647F4A6D9D95654720BAD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time.csv' datatype='table' name='[__tableau_internal_object_id__].[time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D]' role='measure' type='quantitative' />
      <column datatype='string' name='[customer_city (map.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Customer City' datatype='string' name='[customer_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[customer_state (map.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Customer State' datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[customer_zip_code_prefix (map.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' caption='Customer Zip Code Prefix' datatype='integer' default-format='*00000' name='[customer_zip_code_prefix]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Order Id (Payment.Csv)' datatype='string' name='[order_id (payment.csv)]' role='dimension' type='nominal' />
      <column caption='Order Id' datatype='string' name='[order_id]' role='dimension' type='nominal' />
      <column caption='Order Purchase Timestamp' datatype='date' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
      <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
      <column caption='Price (Payment.Csv)' datatype='real' name='[price (payment.csv)]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column-instance column='[order_purchase_timestamp]' derivation='None' name='[none:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (MONTH(MAX Zoomed Date),MONTH(MIN Zoomed Date),Order Purchase Timestamp,Payment Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Calculation_1102819005064986633:qk]' />
          <groupfilter function='level-members' level='[tmn:Calculation_1102819005064400904:qk]' />
          <groupfilter function='level-members' level='[none:order_purchase_timestamp:qk]' />
          <groupfilter function='level-members' level='[none:payment_type:nk]' />
        </groupfilter>
      </group>
      <group caption='Zoom date set' name='[Order Purchase Timestamp Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='level-members' level='[order_purchase_timestamp]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.847765' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.152235' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hungary&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Payment type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Credit card&quot;'>
          <calculation class='tableau' formula='&quot;Credit card&quot;' />
        </column>
        <column caption='Zoom days' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='30.'>
          <calculation class='tableau' formula='30.' />
          <range max='100.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='map.csv' id='map.csv_2562F30EDE5240B592193B5F8AEF5F0F'>
            <properties context=''>
              <relation connection='textscan.06iamnd0uksqv71bxcj5w0y9kusp' name='map.csv' table='[map#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='hu_HU'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='order_id' ordinal='1' />
                  <column datatype='real' name='price' ordinal='2' />
                  <column datatype='integer' name='customer_zip_code_prefix' ordinal='3' />
                  <column datatype='string' name='customer_city' ordinal='4' />
                  <column datatype='string' name='customer_state' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='payment.csv' id='payment.csv_8AA8A215466647F4A6D9D95654720BAD'>
            <properties context=''>
              <relation connection='textscan.06iamnd0uksqv71bxcj5w0y9kusp' name='payment.csv' table='[payment#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='order_id' ordinal='1' />
                  <column datatype='real' name='price' ordinal='2' />
                  <column datatype='string' name='payment_type' ordinal='3' />
                  <column datatype='integer' name='customer_zip_code_prefix' ordinal='4' />
                  <column datatype='string' name='customer_city' ordinal='5' />
                  <column datatype='string' name='customer_state' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='time.csv' id='time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D'>
            <properties context=''>
              <relation connection='textscan.0j6gm541pebtx5182abqw0w3iyz8' name='time.csv' table='[time#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='order_id' ordinal='1' />
                  <column datatype='real' name='price' ordinal='2' />
                  <column datatype='date' name='order_purchase_timestamp' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (map.csv)]' />
            </expression>
            <first-end-point object-id='time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D' />
            <second-end-point object-id='map.csv_2562F30EDE5240B592193B5F8AEF5F0F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (payment.csv)]' />
            </expression>
            <first-end-point object-id='time.csv_54B029FF242D4CF6AC6E9475CDA7BD3D' />
            <second-end-point object-id='payment.csv_8AA8A215466647F4A6D9D95654720BAD' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='payment' inline='true' name='federated.13zzwb81irt46x1bbksnu07jb14z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='payment' name='textscan.1siqza70gbzbf81gbdpce1unsnwt'>
            <connection class='textscan' directory='C:/GitHub/BrasilianEcommerceAnalysis' filename='payment.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1siqza70gbzbf81gbdpce1unsnwt' name='payment.csv' table='[payment#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='hu_HU' separator='_'>
            <column datatype='string' name=',order' ordinal='0' />
            <column datatype='string' name='id,price,payment' ordinal='1' />
            <column datatype='string' name='type,customer' ordinal='2' />
            <column datatype='string' name='zip' ordinal='3' />
            <column datatype='string' name='code' ordinal='4' />
            <column datatype='string' name='prefix,customer' ordinal='5' />
            <column datatype='string' name='city,customer' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1siqza70gbzbf81gbdpce1unsnwt' name='payment.csv' table='[payment#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='hu_HU' separator='_'>
            <column datatype='string' name=',order' ordinal='0' />
            <column datatype='string' name='id,price,payment' ordinal='1' />
            <column datatype='string' name='type,customer' ordinal='2' />
            <column datatype='string' name='zip' ordinal='3' />
            <column datatype='string' name='code' ordinal='4' />
            <column datatype='string' name='prefix,customer' ordinal='5' />
            <column datatype='string' name='city,customer' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;hu&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Ft&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;_&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;hu_HU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>,order</remote-name>
            <remote-type>129</remote-type>
            <local-name>[,order]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>,order</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id,price,payment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id,price,payment]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>id,price,payment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type,customer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type,customer]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>type,customer</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>zip</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prefix,customer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prefix,customer]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>prefix,customer</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city,customer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city,customer]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>city,customer</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[payment.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LHU_RHU' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='payment.csv' datatype='table' name='[__tableau_internal_object_id__].[payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B]' role='measure' type='quantitative' />
      <column datatype='string' name='[city,customer]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hungary&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='payment.csv' id='payment.csv_8AC8BD59F81D4CC586ACD3E62D71502B'>
            <properties context=''>
              <relation connection='textscan.1siqza70gbzbf81gbdpce1unsnwt' name='payment.csv' table='[payment#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='hu_HU' separator='_'>
                  <column datatype='string' name=',order' ordinal='0' />
                  <column datatype='string' name='id,price,payment' ordinal='1' />
                  <column datatype='string' name='type,customer' ordinal='2' />
                  <column datatype='string' name='zip' ordinal='3' />
                  <column datatype='string' name='code' ordinal='4' />
                  <column datatype='string' name='prefix,customer' ordinal='5' />
                  <column datatype='string' name='city,customer' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0ver1fj0cainh617wdr7h0vos4l1'>
      <column-instance column='[order_id (payment.csv)]' derivation='None' name='[none:order_id (payment.csv):nk]' pivot='key' type='nominal' />
      <column caption='Order Id (Payment.Csv)' datatype='string' name='[order_id (payment.csv)]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1ulfch20cbm12k107t0oj1as8vaz'>
      <column-instance column='[order_id]' derivation='None' name='[none:order_id:nk]' pivot='key' type='nominal' />
      <column datatype='string' name='[order_id]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1ulfch20cbm12k107t0oj1as8vaz' target='federated.0ver1fj0cainh617wdr7h0vos4l1'>
      <column-mapping>
        <map key='[federated.1ulfch20cbm12k107t0oj1as8vaz].[none:order_id:nk]' value='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_id (payment.csv):nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <edit-group-action caption='Area/Line Zoom' name='[Action1_599F867306F6459F8C26EC0020897EC0]'>
      <activation type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Sheet 6 (2)' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='show-all' />
        <param name='target-group' value='[federated.0ver1fj0cainh617wdr7h0vos4l1].[Order Purchase Timestamp Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Geographical distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='map' name='federated.1ulfch20cbm12k107t0oj1as8vaz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ulfch20cbm12k107t0oj1as8vaz'>
            <_.fcp.ObjectModelTableType.false...column caption='map.csv' datatype='integer' name='[__tableau_internal_object_id__].[map.csv_EC7E01766FFF490EA093211B37E1480B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[map.csv_EC7E01766FFF490EA093211B37E1480B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:map.csv_EC7E01766FFF490EA093211B37E1480B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='map.csv' datatype='table' name='[__tableau_internal_object_id__].[map.csv_EC7E01766FFF490EA093211B37E1480B]' role='measure' type='quantitative' />
            <column datatype='string' name='[customer_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[customer_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[customer_city]' derivation='None' name='[none:customer_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_state]' derivation='None' name='[none:customer_state:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ulfch20cbm12k107t0oj1as8vaz].[Longitude (generated)]' field-type='quantitative' max='-2226994.005829405' min='-12457214.389188789' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ulfch20cbm12k107t0oj1as8vaz].[Latitude (generated)]' field-type='quantitative' max='1712421.8742714692' min='-5800545.0033091474' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='dashed' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.1ulfch20cbm12k107t0oj1as8vaz].[none:customer_state:nk]' />
              <lod column='[federated.1ulfch20cbm12k107t0oj1as8vaz].[none:customer_city:nk]' />
              <lod column='[federated.1ulfch20cbm12k107t0oj1as8vaz].[__tableau_internal_object_id__].[cnt:map.csv_EC7E01766FFF490EA093211B37E1480B:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <encoding attr='density-color' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ulfch20cbm12k107t0oj1as8vaz].[Latitude (generated)]</rows>
        <cols>[federated.1ulfch20cbm12k107t0oj1as8vaz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7A8791C3-7658-4839-A9C9-058FCAF0B4F2}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Purchase in &lt;</run>
            <run>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0ver1fj0cainh617wdr7h0vos4l1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Payment type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Credit card&quot;'>
              <calculation class='tableau' formula='&quot;Credit card&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ver1fj0cainh617wdr7h0vos4l1'>
            <column caption='Sum of Credit Card' datatype='integer' name='[Calculation_1102819004949397506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [payment_type] = &quot;credit_card&quot; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Sum of Boleto' datatype='integer' name='[Calculation_1102819004950769667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [payment_type] = &quot;boleto&quot; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Sum of Voucher' datatype='integer' name='[Calculation_1102819004950913028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [payment_type] = &quot;voucher&quot; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Sum of Debit card' datatype='integer' name='[Calculation_1102819004951126021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [payment_type] = &quot;debit_card&quot; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Sort by payment type' datatype='integer' name='[Calculation_1102819004951261190]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Credit card&quot; THEN [Calculation_1102819004949397506]&#13;&#10;WHEN &quot;Boleto&quot; THEN [Calculation_1102819004950769667]&#13;&#10;WHEN &quot;Voucher&quot; THEN [Calculation_1102819004950913028]&#13;&#10;WHEN &quot;Debit card&quot; THEN [Calculation_1102819004951126021]&#13;&#10;END' />
            </column>
            <column caption='Order Purchase Timestamp' datatype='date' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1102819004951261190]' derivation='Sum' name='[sum:Calculation_1102819004951261190:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Month-Trunc' name='[tmn:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]'>
            <groupfilter function='level-members' level='[yr:order_purchase_timestamp:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:Calculation_1102819004951261190:qk]' scope='rows' value='Credit card' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:Calculation_1102819004951261190:qk]</rows>
        <cols>[federated.0ver1fj0cainh617wdr7h0vos4l1].[tmn:order_purchase_timestamp:qk]</cols>
      </table>
      <simple-id uuid='{266ED146-DF84-4B51-A7F1-45B8559B5BA5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0ver1fj0cainh617wdr7h0vos4l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0ver1fj0cainh617wdr7h0vos4l1'>
            <column-instance column='[order_purchase_timestamp]' derivation='Count' name='[cnt:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='None' name='[none:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Purchase Timestamp' datatype='date' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]'>
            <groupfilter from='2016' function='range' level='[yr:order_purchase_timestamp:ok]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]' field-type='quantitative' max='#2018-10-01#' min='#2016-09-26#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk]' field-type='quantitative' max='856' min='-78' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:payment_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk]</rows>
        <cols>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]</cols>
      </table>
      <simple-id uuid='{55159B76-D2EB-4A51-A56F-B224E384579E}' />
    </worksheet>
    <worksheet name='Sheet 2 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0ver1fj0cainh617wdr7h0vos4l1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Zoom days' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='30.'>
              <calculation class='tableau' formula='30.' />
              <range max='100.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ver1fj0cainh617wdr7h0vos4l1'>
            <column caption='Zoom Date' datatype='date' name='[Calculation_1085649031513300997]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED : MAX(IIF([Order Purchase Timestamp Set], [order_purchase_timestamp], NULL))}' />
            </column>
            <column caption='Zoom Date Include' datatype='string' name='[Calculation_1085649031513481222]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ABS(DATEDIFF(&apos;day&apos;, [order_purchase_timestamp], [Calculation_1085649031513300997]))&lt;=[Parameters].[Parameter 3] THEN&#13;&#10;    &quot;Include&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[order_purchase_timestamp]' derivation='Count' name='[cnt:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1085649031513481222]' derivation='None' name='[none:Calculation_1085649031513481222:nk]' pivot='key' type='nominal' />
            <column-instance column='[order_purchase_timestamp]' derivation='None' name='[none:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
            <column caption='Order Purchase Timestamp' datatype='date' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:Calculation_1085649031513481222:nk]'>
            <groupfilter function='member' level='[none:Calculation_1085649031513481222:nk]' member='&quot;Include&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]'>
            <groupfilter from='2016' function='range' level='[yr:order_purchase_timestamp:ok]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</column>
            <column>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:Calculation_1085649031513481222:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]' field-type='quantitative' max='#2018-10-01#' min='#2016-09-26#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk]' field-type='quantitative' fold='true' max='856' min='-78' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:payment_type:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:payment_type:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:payment_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk] + [federated.0ver1fj0cainh617wdr7h0vos4l1].[cnt:order_purchase_timestamp:qk])</rows>
        <cols>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]</cols>
      </table>
      <simple-id uuid='{BDB3F58F-92E6-488D-9525-5D32D98B8390}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0ver1fj0cainh617wdr7h0vos4l1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Zoom days' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='30.'>
              <calculation class='tableau' formula='30.' />
              <range max='100.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ver1fj0cainh617wdr7h0vos4l1'>
            <column caption='Zoom Date' datatype='date' name='[Calculation_1085649031513300997]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED : MAX(IIF([Order Purchase Timestamp Set], [order_purchase_timestamp], NULL))}' />
            </column>
            <column caption='Zoom Date Include' datatype='string' name='[Calculation_1085649031513481222]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ABS(DATEDIFF(&apos;day&apos;, [order_purchase_timestamp], [Calculation_1085649031513300997]))&lt;=[Parameters].[Parameter 3] THEN&#13;&#10;    &quot;Include&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Exclude&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1085649031513481222]' derivation='None' name='[none:Calculation_1085649031513481222:nk]' pivot='key' type='nominal' />
            <column-instance column='[order_purchase_timestamp]' derivation='None' name='[none:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Order Purchase Timestamp' datatype='date' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:Calculation_1085649031513481222:nk]'>
            <groupfilter function='member' level='[none:Calculation_1085649031513481222:nk]' member='&quot;Include&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]'>
            <groupfilter from='2016' function='range' level='[yr:order_purchase_timestamp:ok]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</column>
            <column>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:Calculation_1085649031513481222:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk] + [federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk])</rows>
        <cols>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]</cols>
      </table>
      <simple-id uuid='{4712FEBC-0E69-4BE8-B076-4DAD9CC2734A}' />
    </worksheet>
    <worksheet name='Sheet 6 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0ver1fj0cainh617wdr7h0vos4l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0ver1fj0cainh617wdr7h0vos4l1'>
            <column-instance column='[order_purchase_timestamp]' derivation='None' name='[none:order_purchase_timestamp:qk]' pivot='key' type='quantitative' />
            <column caption='Order Purchase Timestamp' datatype='date' name='[order_purchase_timestamp]' role='dimension' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[order_purchase_timestamp]' derivation='Year' name='[yr:order_purchase_timestamp:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]'>
            <groupfilter from='2016' function='range' level='[yr:order_purchase_timestamp:ok]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk] + [federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk])</rows>
        <cols>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]</cols>
      </table>
      <simple-id uuid='{8C22DBBD-0F62-4EAF-8344-15D7FC3ED47A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='97250' id='3' name='Sheet 6 (2)' w='99300' x='700' y='1250' />
        <zone h='33250' id='4' name='Sheet 6' show-title='false' w='33300' x='66200' y='2750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='97250' id='3' is-fixed='true' name='Sheet 6 (2)' w='99300' x='700' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='4' is-fixed='true' name='Sheet 6' show-title='false' w='33300' x='66200' y='2750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3596ACAB-5D58-45F6-A430-E758DE38B46C}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8505094F-5DBF-4B5F-97CD-D57097CBAB1A}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:payment_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B75E193C-929C-4E62-B674-AF9EF7910040}' />
    </window>
    <window class='worksheet' name='Sheet 2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:payment_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:Calculation_1085649031513481222:nk]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DEE4440A-18D5-4D4A-847F-7C3B2E6D2F1A}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:Calculation_1085649031513481222:nk]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F91252E-685E-43D1-B812-60D24ADC522D}' />
    </window>
    <window class='worksheet' name='Sheet 6 (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:Calculation_1085649031513481222:nk]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[yr:order_purchase_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DE0BF9F-4EA5-47F9-B8BD-DC5B00753B77}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6 (2)'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:order_purchase_timestamp:qk]</field>
                    <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:price:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>#2018-03-23#</value>
                  <value>28468.430000000026</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{58EBAA15-BA80-4E4C-A6B8-95FEA1F507D0}' />
    </window>
    <window class='worksheet' maximized='true' name='Geographical distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:customer_city:nk]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:customer_state:nk]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:customer_zip_code_prefix:ok]</field>
            <field>[federated.0ver1fj0cainh617wdr7h0vos4l1].[none:payment_type:nk]</field>
            <field>[federated.1ulfch20cbm12k107t0oj1as8vaz].[none:customer_city:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7AB187CA-1877-49EF-97F0-21EE9324F14E}' />
    </window>
  </windows>
  <_.fcp.DatagraphCoreV1.true...datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='7c3d10ac-da3e-48ce-b5a6-24f3aba605fd' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='7c3d10ac-da3e-48ce-b5a6-24f3aba605fd' node-guid='26c4df29-cd2b-4b85-9833-aca043415668' />
        <pair execution-subgraph-guid='7c3d10ac-da3e-48ce-b5a6-24f3aba605fd' node-guid='fc2ef4ad-3bc9-4314-ab2e-a75720736f9e' />
      </node-execution-subgraphs>
      <nodes>
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='072f5059-cf89-4ae0-86d9-b2f3aae8d693' node-guid='26c4df29-cd2b-4b85-9833-aca043415668' value-output-guid='5184c219-d081-4a2a-a894-143d2f53045c' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0ver1fj0cainh617wdr7h0vos4l1].[sum:Calculation_1102819004951261190:qk]' node-guid='fc2ef4ad-3bc9-4314-ab2e-a75720736f9e' orientation='vertical' sheet-identifier='{266ED146-DF84-4B51-A7F1-45B8559B5BA5}' title-input-guid='f290e9d2-f4ea-4d9f-9c86-1b4da27f4247' />
      </nodes>
      <edges>
        <edge from='5184c219-d081-4a2a-a894-143d2f53045c' to='f290e9d2-f4ea-4d9f-9c86-1b4da27f4247' />
      </edges>
      <pin-values />
    </graph>
  </_.fcp.DatagraphCoreV1.true...datagraph>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographical distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      ube6htYaqzWdwX0mZ+c5Nj/N8VNnWTo2D1hc12Vm4TgzFY9umDz187c3VlldXaHZSygUSqRx
      h243HGxZ61HfXqYTJkzNLjI3VRs+Y2P1Lqsrq7RaXQ7urLDXP3Mb4FlgJJevL/PeO2++6JaM
      DfWNu+jCPAvTT7cVTi4AOWNNvhKcM9bkApDz2LxOSkMuAM8JaxX/7Ve/5Je//g16n6vw448/
      vs91uNu5/uL/+nN++Td/d+CYtRbbXefjr++MPjb4165v8Od//ufcWb3LpUu3HnrutWtXH3r8
      wQ7/y998zJ3ley/iY3zmvHb7BL+spNs3kBPnWFLX+D//j//M9JlFnPoaqzt9osY9Pv/6Jotv
      vsW5pZP89Cc/pNGoI50qf/XXfwWATSJmjp9ka2WFH3xwmosXN9lcvkbVtrnddqjJBh999A6/
      +JvPefc7v8+f/vwPmJiY5MzSIr/46tf80z/+HUExwClUcKNNbjYsHy5NMH32I659/htK1Rqf
      /OqvcWbfJNy+hluo4XolCq6iJBTv/8mfcXIq4Be//Ft+9ZuP4edw5tSJF/ypPj35DPCcKMws
      0V29yJWNhOOTAT/96U+QSuG6Do5X4Gc//zmVQoGf/uSHACwuneXf/dmfoqIe97YaOEGJP/j9
      7wMgEBw/dQ6fhM1GyFQ14L0L73Lv2jcsnX2X715468Dz544tcWxxgbmpGoXKJD//45/y7vvv
      8eUXX3Dy5ElkZ5MwWCQQkpmFE7xxbIGFmUmsVigj8AcbjU9N1Pjvfvb7/Pf/4g+e34d3hORe
      oJyH8sknn/DjH//4RTfjyMgFIGes+f8BSyQR4znIB7kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      UA40/x86PNDvs+S52wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6 (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
